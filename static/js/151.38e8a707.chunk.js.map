{"version":3,"file":"static/js/151.38e8a707.chunk.js","mappings":"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","sources":["components/Banner/index.jsx","constants/images.js","features/Photo/components/PhotoCard/index.jsx","features/Photo/components/PhotoList/index.jsx","features/Photo/pages/Main/index.jsx","constants/global.js","custom-fields/InputField/index.jsx","components/RandomPhoto/index.jsx","custom-fields/RandomPhotoField/index.jsx","custom-fields/SelectField/index.jsx","features/Photo/components/PhotoForm/index.jsx","features/Photo/pages/AddEdit/index.jsx","utils/common.js","features/Photo/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Banner.scss\";\r\n\r\nBanner.propTypes = {\r\n  title: PropTypes.string,\r\n  backgroundUrl: PropTypes.string,\r\n};\r\n\r\nBanner.defaultProps = {\r\n  title: \"\",\r\n  backgroundUrl: \"\",\r\n};\r\n\r\nfunction Banner(props) {\r\n  const { title, backgroundUrl } = props;\r\n\r\n  const bannerStyle = backgroundUrl\r\n    ? { backgroundImage: `url(${backgroundUrl})` }\r\n    : {};\r\n\r\n  return (\r\n    <section className=\"banner\" style={bannerStyle}>\r\n      <h1 className=\"banner__title\">{title}</h1>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import orangeBackground from '../assets/images/orange-bg.jpg';\nimport blueBackground from '../assets/images/blue-bg.jpg';\nimport colorfulBackground from '../assets/images/colorful-bg.jpg';\nimport pinkBackground from '../assets/images/pink-bg.jpg';\n\nconst Images = {\n  ORANGE_BG: orangeBackground,\n  BLUE_BG: blueBackground,\n  COLORFUL_BG: colorfulBackground,\n  PINK_BG: pinkBackground\n}\n\nexport default Images;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./PhotoCard.scss\";\nimport { Button } from \"react-bootstrap\";\n\nPhotoCard.propTypes = {\n  photo: PropTypes.object,\n  onEditClick: PropTypes.func,\n  onRemoveClick: PropTypes.func,\n};\n\nPhotoCard.defaultProps = {\n  photo: {},\n  onEditClick: null,\n  onRemoveClick: null,\n};\n\nfunction PhotoCard(props) {\n  const { photo, onEditClick, onRemoveClick } = props;\n\n  const handleEditClick = () => {\n    if (onEditClick) onEditClick(photo);\n  };\n\n  const handleRemoveClick = () => {\n    if (onRemoveClick) onRemoveClick(photo);\n  };\n\n  return (\n    <div className=\"photo\">\n      <img src={photo.photo} alt={photo.title} />\n\n      <div className=\"photo__overlay\">\n        <h3 className=\"photo__title\">{photo.title}</h3>\n\n        <div className=\"photo__actions\">\n          <div>\n            <Button variant=\"outline-light\" size=\"sm\" onClick={handleEditClick}>\n              Edit\n            </Button>\n          </div>\n\n          <div>\n            <Button\n              variant=\"outline-danger\"\n              size=\"sm\"\n              onClick={handleRemoveClick}\n            >\n              Remove\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PhotoCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Row, Col } from \"react-bootstrap\";\nimport PhotoCard from \"../PhotoCard\";\n\nPhotoList.propTypes = {\n  photoList: PropTypes.array,\n  onPhotoEditClick: PropTypes.func,\n  onPhotoRemoveClick: PropTypes.func,\n};\n\nPhotoList.defaultProps = {\n  photoList: [],\n  onPhotoEditClick: null,\n  onPhotoRemoveClick: null,\n};\n\nfunction PhotoList(props) {\n  const { photoList, onPhotoEditClick, onPhotoRemoveClick } = props;\n\n  return (\n    <Row>\n      {photoList.map((photo) => (\n        <Col key={photo.title} xs=\"12\" md=\"6\" lg=\"3\">\n          <PhotoCard\n            photo={photo}\n            onEditClick={onPhotoEditClick}\n            onRemoveClick={onPhotoRemoveClick}\n          />\n        </Col>\n      ))}\n    </Row>\n  );\n}\n\nexport default PhotoList;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Banner from \"components/Banner\";\r\nimport Images from \"constants/images\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PhotoList from \"features/Photo/components/PhotoList\";\r\nimport { removePhoto } from \"features/Photo/photoSlice\";\r\n\r\nMainPage.propTypes = {};\r\n\r\nfunction MainPage(props) {\r\n  const dispatch = useDispatch();\r\n  const photos = useSelector((state) => state.photos);\r\n  const navigate = useNavigate();\r\n  console.log(\"List photos:\", photos);\r\n\r\n  const handlePhotoEditClick = (photo) => {\r\n    console.log(\"Edit: \", photo);\r\n    const editPhotoUrl = `/photos/${photo.id}`;\r\n    navigate(editPhotoUrl);\r\n  };\r\n\r\n  const handlePhotoRemoveClick = (photo) => {\r\n    console.log(\"Remove: \", photo);\r\n    const removePhotoId = photo.id;\r\n    const action = removePhoto(removePhotoId);\r\n    dispatch(action);\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-main\">\r\n      <Banner\r\n        title=\"Your awesome photos\"\r\n        backgroundUrl={Images.PINK_BG}\r\n      ></Banner>\r\n      <Container className=\"text-center\">\r\n        <div className=\"py-5\">\r\n          <Link to=\"add\">Add new photo</Link>\r\n        </div>\r\n\r\n        <PhotoList\r\n          photoList={photos}\r\n          onPhotoEditClick={handlePhotoEditClick}\r\n          onPhotoRemoveClick={handlePhotoRemoveClick}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","export const PHOTO_CATEGORY_OPTIONS = [\n  { value: 1, label: \"Technology\" },\n  { value: 2, label: \"Education\" },\n  { value: 3, label: \"Nature\" },\n  { value: 4, label: \"Animals\" },\n  { value: 5, label: \"Styles\" },\n];\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { ErrorMessage } from \"formik\";\nimport { Form } from \"react-bootstrap\";\n\nInputField.propTypes = {\n  field: PropTypes.object.isRequired,\n  form: PropTypes.object.isRequired,\n\n  type: PropTypes.string,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n};\n\nInputField.defaultProps = {\n  type: \"text\",\n  label: \"\",\n  placeholder: \"\",\n  disabled: false,\n};\n\nfunction InputField(props) {\n  const { field, form, type, label, placeholder, disabled } = props;\n  const { name } = field;\n  const { errors, touched } = form;\n  const showError = errors[name] && touched[name];\n  return (\n    <Form.Group>\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\n\n      <Form.Control\n        id={name}\n        {...field}\n        type={type}\n        disabled={disabled}\n        placeholder={placeholder}\n        isInvalid={showError}\n      />\n\n      {showError && (\n        <Form.Control.Feedback type=\"invalid\">\n          {errors[name]}\n        </Form.Control.Feedback>\n      )}\n    </Form.Group>\n  );\n}\n\nexport default InputField;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./RandomPhoto.scss\";\n\nRandomPhoto.propTypes = {\n  name: PropTypes.string,\n  imageUrl: PropTypes.string,\n  onImageUrlChange: PropTypes.func,\n  onRandomButtonBlur: PropTypes.func,\n};\n\nRandomPhoto.defaultProps = {\n  name: \"\",\n  imageUrl: \"\",\n  onImageUrlChange: null,\n  onRandomButtonBlur: null,\n};\n\nconst getRandomImageUrl = () => {\n  const randomId = Math.trunc(Math.random() * 2000);\n  return `https://picsum.photos/id/${randomId}/300/300`;\n};\n\nfunction RandomPhoto(props) {\n  const { name, imageUrl, onImageUrlChange, onRandomButtonBlur } = props;\n\n  const handleRandomPhotoClick = async () => {\n    if (onImageUrlChange) {\n      const randomImageUrl = getRandomImageUrl();\n      onImageUrlChange(randomImageUrl);\n    }\n  };\n\n  return (\n    <div className=\"random-photo\">\n      <div className=\"random-photo__button\">\n        <Button\n          outline=\"true\"\n          name={name}\n          variant=\"outline-primary\"\n          onBlur={onRandomButtonBlur}\n          onClick={handleRandomPhotoClick}\n        >\n          Random a photo\n        </Button>\n      </div>\n\n      <div className=\"random-photo__photo\">\n        {imageUrl && (\n          <img\n            src={imageUrl}\n            alt=\"Ooops ... not found. Please click random again!\"\n            onError={handleRandomPhotoClick}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default RandomPhoto;\n","import RandomPhoto from \"components/RandomPhoto\";\nimport { ErrorMessage } from \"formik\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nRandomPhotoField.propTypes = {\n  field: PropTypes.object.isRequired,\n  form: PropTypes.object.isRequired,\n\n  label: PropTypes.string,\n};\n\nRandomPhotoField.defaultProps = {\n  label: \"\",\n};\n\nfunction RandomPhotoField(props) {\n  const { field, form, label } = props;\n  const { name, value, onBlur } = field;\n  const { errors, touched } = form;\n  const showError = errors[name] && touched[name];\n\n  const handleImageUrlChange = (newImageUrl) => {\n    form.setFieldValue(name, newImageUrl);\n  };\n\n  return (\n    <Form.Group>\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\n\n      <RandomPhoto\n        name={name}\n        imageUrl={value}\n        onImageUrlChange={handleImageUrlChange}\n        onRandomButtonBlur={onBlur}\n      />\n\n      <div className={showError ? \"is-invalid\" : \"\"}></div>\n      <ErrorMessage name={name}>\n        {(msg) => (\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\n        )}\n      </ErrorMessage>\n    </Form.Group>\n  );\n}\n\nexport default RandomPhotoField;\n","import { ErrorMessage } from \"formik\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport Select from \"react-select\";\n\nSelectField.propTypes = {\n  field: PropTypes.object.isRequired,\n  form: PropTypes.object.isRequired,\n\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  options: PropTypes.array,\n};\n\nSelectField.defaultProps = {\n  label: \"\",\n  placeholder: \"\",\n  disabled: false,\n  options: [],\n};\n\nfunction SelectField(props) {\n  const { field, form, options, label, placeholder, disabled } = props;\n  const { name, value } = field;\n  const { errors, touched } = form;\n  const showError = errors[name] && touched[name];\n\n  const selectedOption = options.find((option) => option.value === value);\n\n  const handleSelectedOptionChange = (selectedOption) => {\n    const selectedValue = selectedOption\n      ? selectedOption.value\n      : selectedOption;\n\n    const changeEvent = {\n      target: {\n        name: name,\n        value: selectedValue,\n      },\n    };\n    field.onChange(changeEvent);\n  };\n\n  return (\n    <Form.Group>\n      {label && <Form.Label htmlFor={name}>{label}</Form.Label>}\n\n      <Select\n        id={name}\n        {...field}\n        value={selectedOption}\n        onChange={handleSelectedOptionChange}\n        placeholder={placeholder}\n        isDisabled={disabled}\n        options={options}\n        className={showError ? \"is-invalid\" : \"\"}\n      />\n\n      <ErrorMessage name={name}>\n        {(msg) => (\n          <Form.Control.Feedback type=\"invalid\">{msg}</Form.Control.Feedback>\n        )}\n      </ErrorMessage>\n    </Form.Group>\n  );\n}\n\nexport default SelectField;\n","import { PHOTO_CATEGORY_OPTIONS } from \"constants/global\";\r\nimport InputField from \"custom-fields/InputField\";\r\nimport RandomPhotoField from \"custom-fields/RandomPhotoField\";\r\nimport SelectField from \"custom-fields/SelectField\";\r\nimport { FastField, Form as Form1, Formik } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Button, Form, Spinner } from \"react-bootstrap\";\r\nimport * as Yup from \"yup\";\r\n\r\nPhotoForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nPhotoForm.defaultPros = {\r\n  onSubmit: null,\r\n};\r\n\r\nfunction PhotoForm(props) {\r\n  const { initialValues, isAddMode } = props;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"This field is required.\"),\r\n\r\n    categoryId: Yup.number().required(\"This field is required.\").nullable(),\r\n\r\n    photo: Yup.string().when(\"categoryId\", {\r\n      is: 1,\r\n      then: Yup.string().required(\"This field is required.\"),\r\n      otherwise: Yup.string().notRequired(),\r\n    }),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={props.onSubmit}\r\n    >\r\n      {(formikProps) => {\r\n        //do something here...\r\n        const { values, errors, touched, isSubmitting } = formikProps;\r\n        console.log({ values, errors, touched });\r\n\r\n        return (\r\n          <Form1>\r\n            <FastField\r\n              name=\"title\"\r\n              component={InputField}\r\n              label=\"Title\"\r\n              placeholder=\"Eg:...\"\r\n            ></FastField>\r\n            <FastField\r\n              name=\"categoryId\"\r\n              component={SelectField}\r\n              label=\"Category\"\r\n              placeholder=\"What's your photo category?\"\r\n              options={PHOTO_CATEGORY_OPTIONS}\r\n            />\r\n            <FastField\r\n              name=\"photo\"\r\n              component={RandomPhotoField}\r\n              label=\"Photo\"\r\n            />\r\n            <Form.Group>\r\n              <Button type=\"submit\" variant={isAddMode ? \"primary\" : \"success\"}>\r\n                {isSubmitting && <Spinner size=\"sm\" />}\r\n                {isAddMode ? \"Add to album\" : \"Update your photo\"}\r\n              </Button>\r\n            </Form.Group>\r\n          </Form1>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default PhotoForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./styles.scss\";\r\nimport Banner from \"components/Banner\";\r\nimport PhotoForm from \"features/Photo/components/PhotoForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addPhoto, updatePhoto } from \"features/Photo/photoSlice\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { randomNumber } from \"utils/common\";\r\n\r\nAddEditPage.propTypes = {};\r\n\r\nfunction AddEditPage(props) {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { photoId } = useParams();\r\n  const isAddMode = !photoId;\r\n\r\n  const editedPhoto = useSelector((state) => {\r\n    const foundPhoto = state.photos.find((x) => x.id === +photoId);\r\n    return foundPhoto;\r\n  });\r\n\r\n  const initialValues = isAddMode\r\n    ? {\r\n        title: \"\",\r\n        categoryId: null,\r\n        photo: \"\",\r\n      }\r\n    : editedPhoto;\r\n\r\n  const handleSubmit = (values) => {\r\n    return new Promise((resolve) => {\r\n      console.log(\"Form submit: \", values);\r\n\r\n      setTimeout(() => {\r\n        if (isAddMode) {\r\n          const newPhoto = {\r\n            id: randomNumber(10000, 99999),\r\n            ...values,\r\n          };\r\n          const action = addPhoto(newPhoto);\r\n          dispatch(action);\r\n        } else {\r\n          // Do something here\r\n          const action = updatePhoto(values);\r\n          dispatch(action);\r\n        }\r\n\r\n        navigate(\"/photos\");\r\n        resolve(true);\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"photo-edit\">\r\n      <Banner title=\"Pick your amazing photo 😎\" />\r\n\r\n      <div className=\"photo-edit__form\">\r\n        <PhotoForm\r\n          isAddMode={isAddMode}\r\n          initialValues={initialValues}\r\n          onSubmit={handleSubmit}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEditPage;\r\n","\nexport const randomNumber = (min, max) => {\n  return min + Math.trunc(Math.random() * (max - min));\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { matchPath, Route, Routes } from \"react-router-dom\";\r\nimport MainPage from \"./pages/Main\";\r\nimport AddEditPage from \"./pages/AddEdit\";\r\nimport NotFound from \"components/NotFound\";\r\n\r\nPhoto.propTypes = {};\r\n\r\nfunction Photo(props) {\r\n  return (\r\n    <Routes>\r\n      <Route end path=\"\" element={<MainPage />} />\r\n\r\n      <Route path=\"add\" element={<AddEditPage />} />\r\n      <Route path=\":photoId\" element={<AddEditPage />} />\r\n\r\n      <Route element={<NotFound />} />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default Photo;\r\n"],"names":["Banner","props","title","backgroundUrl","bannerStyle","backgroundImage","className","style","defaultProps","ORANGE_BG","BLUE_BG","COLORFUL_BG","PINK_BG","PhotoCard","photo","onEditClick","onRemoveClick","src","alt","Button","variant","size","onClick","PhotoList","photoList","onPhotoEditClick","onPhotoRemoveClick","Row","map","Col","xs","md","lg","dispatch","useDispatch","photos","useSelector","state","navigate","useNavigate","console","log","Images","Container","to","editPhotoUrl","id","removePhotoId","action","removePhoto","PHOTO_CATEGORY_OPTIONS","value","label","InputField","field","form","type","placeholder","disabled","name","errors","touched","showError","Form","htmlFor","isInvalid","RandomPhoto","imageUrl","onImageUrlChange","onRandomButtonBlur","getRandomImageUrl","randomId","Math","trunc","random","handleRandomPhotoClick","randomImageUrl","outline","onBlur","onError","RandomPhotoField","newImageUrl","setFieldValue","msg","SelectField","options","selectedOption","find","option","onChange","selectedValue","changeEvent","target","isDisabled","PhotoForm","initialValues","isAddMode","validationSchema","Yup","shape","required","categoryId","nullable","when","is","then","otherwise","notRequired","onSubmit","formikProps","values","isSubmitting","component","Spinner","defaultPros","photoId","useParams","editedPhoto","x","Promise","resolve","setTimeout","newPhoto","min","max","addPhoto","updatePhoto","end","path","element","Main","AddEdit","NotFound"],"sourceRoot":""}